{"ast":null,"code":"import React,{useState}from'react';import'./PrimerSequenceInputForm.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PrimerInputForm=_ref=>{let{onValueChange,handleSequence}=_ref;const[fullSequence,setFullSequence]=useState('');const[primers,setPrimers]=useState([{name:'F1c',sequence:''},{name:'F2',sequence:''},{name:'F3',sequence:''},{name:'B1c',sequence:''},{name:'B2',sequence:''},{name:'B3',sequence:''}]);const[isValid,setValid]=useState(true);const[errorMessage,setErrorMessage]=useState('');const handleFullSequenceChange=e=>{setFullSequence(e.target.value);};const handlePrimerChange=(index,sequence)=>{const updatedPrimers=primers.map((primer,idx)=>{if(idx===index){return{...primer,sequence};}return primer;});setPrimers(updatedPrimers);};const validateInput=()=>{if(!fullSequence.trim()&&!primers.some(p=>p.sequence.trim())){setErrorMessage('Please enter a full sequence or primer sequences.');return false;}const validChar=/^[aAcCgGtTuU]+$/;const cleanedFullSequence=fullSequence.replace(/\\s/g,'');if(fullSequence&&!validChar.test(cleanedFullSequence)){setErrorMessage('Invalid characters in the full sequence.');return false;}for(let primer of primers){const cleanedInput=primer.sequence.replace(/\\s/g,'');if(!validChar.test(cleanedInput)){setErrorMessage(\"Invalid characters in \".concat(primer.name,\" sequence.\"));return false;}if(cleanedInput.length<5){setErrorMessage(\"\".concat(primer.name,\" sequence length must be at least 5.\"));return false;}}setErrorMessage('');return true;};const handleSubmit=e=>{e.preventDefault();const isValidInput=validateInput();if(isValidInput){console.log('Submitted full sequence:',fullSequence);console.log('Submitted primers:',primers);setValid(true);onValueChange(true);handleSequence(fullSequence,primers);}else{setValid(false);}};const handleSamplePrimers=()=>{setFullSequence(\"CATACAATGTAACACAAGCTTTCGGCAGACGTGGTCCAGAACAAACCCAAGGAAATTTTGGGGACCAGGAACTAATCAGACAAGGAACTGATTACAAACATTGGCCGCAAATTGCACAATTTGCCCCCAGCGCTTCAGCGTTCTTCGGAATGTCGCGCATTGGCATGGAAGTCACACCTTCGGGAACGTGGTTGACCTACACAGGTGCCATCAAATTGGATGACAAAGATCCAAATTTCAAAGATCAAGTCATTTTGCTGAATAAGCATATTGACGCATACAAAACATTCCCACCAACAGA\");setPrimers([{name:'F1c',sequence:'ATTGTGCAATTTGCGGCCAA'},{name:'F2',sequence:'GGGACCAGGAACTAATCAGA'},{name:'F3',sequence:'CAGAACAAACCCAAGGAAAT'},{name:'B1c',sequence:'CGCTTCAGCGTTCTTCGGAA'},{name:'B2',sequence:'CCTGTGTAGGTCAACCAC'},{name:'B3',sequence:'TCTTTGTCATCCAATTTGATGG'}]);};return/*#__PURE__*/_jsxs(\"div\",{className:\"form-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Primer Edit/Debug Tool\"}),/*#__PURE__*/_jsx(\"p\",{className:\"form-description\",children:\"Input your full sequence and sequences for each LAMP primer  OR  try  \"}),/*#__PURE__*/_jsx(\"button\",{style:{paddingTop:'0.5vh',paddingBottom:'0.5vh',position:'absolute',top:'21.5vh',left:'40vw'},onClick:handleSamplePrimers,children:\"Sample Primers!\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"primer-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"full-sequence\",children:\"Full Sequence\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"full-sequence\",value:fullSequence,onChange:handleFullSequenceChange,placeholder:\"Enter the full DNA sequence here\",className:\"textarea-input\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"primers-container\",children:primers.map((primer,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"input-group primer-column\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"primer-\".concat(primer.name),children:primer.name}),/*#__PURE__*/_jsx(\"input\",{id:\"primer-\".concat(primer.name),type:\"text\",value:primer.sequence,onChange:e=>handlePrimerChange(index,e.target.value),placeholder:\"Enter \".concat(primer.name,\" sequence\"),className:\"text-input\"})]},primer.name))}),/*#__PURE__*/_jsx(\"div\",{className:\"button-container\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"generate-button\",children:\"Debug Primer\"})}),!isValid&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:errorMessage})]})]});};export default PrimerInputForm;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","PrimerInputForm","_ref","onValueChange","handleSequence","fullSequence","setFullSequence","primers","setPrimers","name","sequence","isValid","setValid","errorMessage","setErrorMessage","handleFullSequenceChange","e","target","value","handlePrimerChange","index","updatedPrimers","map","primer","idx","validateInput","trim","some","p","validChar","cleanedFullSequence","replace","test","cleanedInput","concat","length","handleSubmit","preventDefault","isValidInput","console","log","handleSamplePrimers","className","children","style","paddingTop","paddingBottom","position","top","left","onClick","onSubmit","htmlFor","id","onChange","placeholder","type"],"sources":["/Users/shruti/Documents/GitHub/geno-graphix-main/frontend/src/forms/PrimerInputForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './PrimerSequenceInputForm.css';\n\nconst PrimerInputForm = ({ onValueChange, handleSequence }) => {\n  const [fullSequence, setFullSequence] = useState('');\n  const [primers, setPrimers] = useState([\n    { name: 'F1c', sequence: '' },\n    { name: 'F2', sequence: '' },\n    { name: 'F3', sequence: '' },\n    { name: 'B1c', sequence: '' },\n    { name: 'B2', sequence: '' },\n    { name: 'B3', sequence: '' },\n  ]);\n  const [isValid, setValid] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleFullSequenceChange = (e) => {\n    setFullSequence(e.target.value);\n  };\n\n  const handlePrimerChange = (index, sequence) => {\n    const updatedPrimers = primers.map((primer, idx) => {\n      if (idx === index) {\n        return { ...primer, sequence };\n      }\n      return primer;\n    });\n    setPrimers(updatedPrimers);\n  };\n\n  const validateInput = () => {\n    if (!fullSequence.trim() && !primers.some(p => p.sequence.trim())) {\n      setErrorMessage('Please enter a full sequence or primer sequences.');\n      return false;\n    }\n\n    const validChar = /^[aAcCgGtTuU]+$/;\n    const cleanedFullSequence = fullSequence.replace(/\\s/g, '');\n    if (fullSequence && !validChar.test(cleanedFullSequence)) {\n      setErrorMessage('Invalid characters in the full sequence.');\n      return false;\n    }\n\n    for (let primer of primers) {\n      const cleanedInput = primer.sequence.replace(/\\s/g, '');\n      if (!validChar.test(cleanedInput)) {\n        setErrorMessage(`Invalid characters in ${primer.name} sequence.`);\n        return false;\n      }\n      if (cleanedInput.length < 5) {\n        setErrorMessage(`${primer.name} sequence length must be at least 5.`);\n        return false;\n      }\n    }\n\n    setErrorMessage('');\n    return true;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const isValidInput = validateInput();\n    if (isValidInput) {\n      console.log('Submitted full sequence:', fullSequence);\n      console.log('Submitted primers:', primers);\n      setValid(true);\n      onValueChange(true);\n      handleSequence(fullSequence, primers);\n    } else {\n      setValid(false);\n    }\n  };\n  const handleSamplePrimers = () =>{\n    setFullSequence(\"CATACAATGTAACACAAGCTTTCGGCAGACGTGGTCCAGAACAAACCCAAGGAAATTTTGGGGACCAGGAACTAATCAGACAAGGAACTGATTACAAACATTGGCCGCAAATTGCACAATTTGCCCCCAGCGCTTCAGCGTTCTTCGGAATGTCGCGCATTGGCATGGAAGTCACACCTTCGGGAACGTGGTTGACCTACACAGGTGCCATCAAATTGGATGACAAAGATCCAAATTTCAAAGATCAAGTCATTTTGCTGAATAAGCATATTGACGCATACAAAACATTCCCACCAACAGA\");\n      setPrimers([\n        { name: 'F1c', sequence: 'ATTGTGCAATTTGCGGCCAA' },\n        { name: 'F2', sequence: 'GGGACCAGGAACTAATCAGA' },\n        { name: 'F3', sequence: 'CAGAACAAACCCAAGGAAAT' },\n        { name: 'B1c', sequence: 'CGCTTCAGCGTTCTTCGGAA' },\n        { name: 'B2', sequence: 'CCTGTGTAGGTCAACCAC' },\n        { name: 'B3', sequence: 'TCTTTGTCATCCAATTTGATGG' },\n    ]);\n  }\n\n  return (\n    <div className=\"form-container\">\n      <h2>Primer Edit/Debug Tool</h2>\n      <p className=\"form-description\">Input your full sequence and sequences for each LAMP primer  OR  try  </p>\n      <button style = {{paddingTop: '0.5vh', paddingBottom: '0.5vh', position: 'absolute', top: '21.5vh', left: '40vw'}} onClick={handleSamplePrimers}> \n        Sample Primers! \n      </button>\n\n      <form onSubmit={handleSubmit} className=\"primer-form\">\n        <div className=\"input-group\">\n          <label htmlFor=\"full-sequence\">Full Sequence</label>\n          <textarea\n            id=\"full-sequence\"\n            value={fullSequence}\n            onChange={handleFullSequenceChange}\n            placeholder=\"Enter the full DNA sequence here\"\n            className=\"textarea-input\"\n          />\n        </div>\n        <div className=\"primers-container\">\n          {primers.map((primer, index) => (\n            <div key={primer.name} className=\"input-group primer-column\">\n              <label htmlFor={`primer-${primer.name}`}>{primer.name}</label>\n              <input\n                id={`primer-${primer.name}`}\n                type=\"text\"\n                value={primer.sequence}\n                onChange={(e) => handlePrimerChange(index, e.target.value)}\n                placeholder={`Enter ${primer.name} sequence`}\n                className=\"text-input\"\n              />\n            </div>\n          ))}\n        </div>\n        <div className=\"button-container\">\n          <button type=\"submit\" className=\"generate-button\">Debug Primer</button>\n        </div>\n\n        {!isValid && (\n          <div className=\"error-message\">{errorMessage}</div>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default PrimerInputForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}